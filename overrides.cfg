############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 


#-------------------------#
#   Backup Config Include #
#-------------------------#


[include config_backup.cfg]

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
#[include start_print.cfg] #override Klippain Default

[gcode_macro _USER_VARIABLES]
 variable_startprint_actions: "custom1", "bed_soak", "chamber_soak", "tilt_calib", "extruder_preheating", "bedmesh", "extruder_heating"
 gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]
 control = pid
 pid_Kp=27.856
 pid_Ki=6.190 
 pid_Kd=31.339
rotation_distance: 47.088
gear_ratio: 9:1
#sensor_pin: mcu:MCU_T1
#sensor_type: Generic 3950

[heater_bed]
 control = pid
 pid_Kp=47.303 
 pid_Ki=2.160 
 pid_Kd=258.982
max_power: 0.8
min_temp: 0
max_temp: 120

#-------------------------#
#   Stepper Overrides     #
#-------------------------#

[stepper_x]
endstop_pin: toolhead:PB6
dir_pin: !X_DIR
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200 
position_endstop:345
position_max: 345
homing_speed: 100

#[tmc2209 stepper_x]
#interpolate: False
#run_current: 1.0
#hold_current: 0.8
#ense_resistor: 0.110
#stealthchop_threshold: 0

[stepper_y]
dir_pin: !Y_DIR
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200
position_endstop:360
position_max: 360
homing_speed: 100

[stepper_z]
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 16
position_max: 245

[stepper_z1]
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 16

[stepper_z2]
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 16

#[tmc2209 stepper_y]
#interpolate: False
#run_current: 1.0
#hold_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0

#[tmc2209 stepper_z]
#interpolate: False
#run_current: 1.2
#hold_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0

#[tmc2209 stepper_z1]
#interpolate: False
#run_current: 1.2
#hold_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0

#[tmc2209 stepper_z2]
#interpolate: False
#run_current: 1.2
#hold_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0


#-------------------------#
#          FANS           #
#-------------------------#

[fan_generic Bed_Fans]
pin: PE5
#cycle_time: 0.05
kick_start_time: 0.5


#-------------------------#
#   Caselights            #
#-------------------------#
[gcode_macro _USER_VARIABLES]
variable_light_enabled: True
variable_light_pin_name: "caselight"
gcode:

# Also include directly the white lights control macros from here
[include macros/hardware_functions/caselights.cfg]

[output_pin caselight]
pin: LIGHT_OUTPUT
pwm: true
value: 0
scale: 100
cycle_time: 0.010



#-------------------------#
#   Chamber Thermistor    #
#-------------------------#

[temperature_sensor Chamber]
sensor_type: Trianglelab NTC100K B3950
sensor_pin: PF4

#-------------------------#
#   Idle Timeout          #
#-------------------------#
[idle_timeout]
timeout: 7200
gcode:
    RESPOND MSG="Idle timeout reached"
    BACKUP_CFG

#-------------------------#
#   Input Shaper          #
#-------------------------#

[input_shaper]
shaper_freq_x: 65.2
shaper_type_x: mzv
shaper_freq_y: 37.9
shaper_type_y: ei
damping_ratio_x: 0.054
damping_ratio_y: 0.046

#-------------------------#
#   Runout Sensor         #
#-------------------------#

#[filament_switch_sensor runout_sensor]
#switch_pin: toolhead:PB8
#pause_on_runout: True

#[gcode_macro _USER_VARIABLES]
#variable_filament_sensor_enabled: True
#gcode:

#-------------------------#
#   MMU                   #
#-------------------------#

[mmu]
disable_heater: 60
#-------------------------#
#          Macros         #
#-------------------------#

[gcode_macro CLEAN_NOZZLE_GANTRY]
gcode:
   SAVE_GCODE_STATE NAME=clean_nozzle_gantry
   G90
   G1 X86 F18000
   G1 Y360 F18000
   G1 X48 F18000
   G1 X86 F18000
   G1 X86 F18000
   G1 Y360 F18000
   G1 X48 F18000
   G1 X86 F18000
   G1 X86 F18000
   G1 Y360 F18000
   G1 X48 F18000
   G1 X86 F18000
   RESTORE_GCODE_STATE NAME=clean_nozzle_gantry


[gcode_macro _MODULE_CUSTOM1] ## Check is material is ABS and turn on the bed fans to help with chamber temp
gcode:
   {% if params.MATERIAL == "ABS" %}
            SET_FAN_SPEED FAN=Bed_Fans SPEED=1
    {% endif %}

[gcode_macro EREC_SERVO_RESET]
gcode:
     SET_SERVO SERVO=cut_servo ANGLE=60
     SET_SERVO SERVO=cut_servo ANGLE=1 
    _CUTTER_CLOSE
   
[gcode_macro PROBE_CALIBRATE]
gcode:
    CARTOGRAPHER_CALIBRATE

[include config_backup.cfg]

[exclude_object]